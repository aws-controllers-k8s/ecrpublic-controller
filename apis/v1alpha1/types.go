// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	"github.com/aws/aws-sdk-go/aws"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// Hack to avoid import errors during build...
var (
	_ = &metav1.Time{}
	_ = &aws.JSONValue{}
	_ = ackv1alpha1.AWSAccountID("")
)

// An object that represents an Amazon ECR image.
type Image struct {
	RepositoryName *string `json:"repositoryName,omitempty"`
}

// An object that describes an image that's returned by a DescribeImages operation.
type ImageDetail struct {
	RegistryID     *string `json:"registryID,omitempty"`
	RepositoryName *string `json:"repositoryName,omitempty"`
}

// An object that represents the image tag details for an image.
type ImageTagDetail struct {
	CreatedAt *metav1.Time `json:"createdAt,omitempty"`
}

// The details of a public registry.
type Registry struct {
	RegistryARN *string `json:"registryARN,omitempty"`
	RegistryID  *string `json:"registryID,omitempty"`
	RegistryURI *string `json:"registryURI,omitempty"`
}

// The catalog data for a repository. This data is publicly visible in the Amazon
// ECR Public Gallery.
type RepositoryCatalogData struct {
	AboutText            *string   `json:"aboutText,omitempty"`
	Architectures        []*string `json:"architectures,omitempty"`
	Description          *string   `json:"description,omitempty"`
	LogoURL              *string   `json:"logoURL,omitempty"`
	MarketplaceCertified *bool     `json:"marketplaceCertified,omitempty"`
	OperatingSystems     []*string `json:"operatingSystems,omitempty"`
	UsageText            *string   `json:"usageText,omitempty"`
}

// An object that contains the catalog data for a repository. This data is publicly
// visible in the Amazon ECR Public Gallery.
type RepositoryCatalogDataInput struct {
	AboutText        *string   `json:"aboutText,omitempty"`
	Architectures    []*string `json:"architectures,omitempty"`
	Description      *string   `json:"description,omitempty"`
	OperatingSystems []*string `json:"operatingSystems,omitempty"`
	UsageText        *string   `json:"usageText,omitempty"`
}

// An object representing a repository.
type Repository_SDK struct {
	CreatedAt      *metav1.Time `json:"createdAt,omitempty"`
	RegistryID     *string      `json:"registryID,omitempty"`
	RepositoryARN  *string      `json:"repositoryARN,omitempty"`
	RepositoryName *string      `json:"repositoryName,omitempty"`
	RepositoryURI  *string      `json:"repositoryURI,omitempty"`
}

// The metadata that you apply to a resource to help you categorize and organize
// them. Each tag consists of a key and an optional value. You define both.
// Tag keys can have a maximum character length of 128 characters, and tag values
// can have a maximum length of 256 characters.
type Tag struct {
	Key   *string `json:"key,omitempty"`
	Value *string `json:"value,omitempty"`
}
